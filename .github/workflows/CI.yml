name: CI

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - name: Format Rust code
        run: |
          cargo fmt --all -- --check

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true

      - name: Lint Rust code
        run: |
          cargo clippy -- -D warnings

  # build-test-run:
  #   needs: [format, lint]
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up MSYS2
  #       run: |
  #         choco install msys2 --params '"/NoUpdate /InstallDir:C:\msys64"'

  #     - name: Install SDL2 and GCC with MSYS2
  #       run: |
  #         C:\msys64\usr\bin\bash -lc "pacman -Syu --noconfirm"
  #         C:\msys64\usr\bin\bash -lc "pacman -S mingw-w64-x86_64-SDL2 --noconfirm"
  #         C:\msys64\usr\bin\bash -lc "pacman -S mingw-w64-x86_64-gcc --noconfirm"

  #     - name: Set up MSYS2 paths for SDL2
  #       run: |
  #         echo "MSYS2_PATH=C:\msys64\mingw64" >> $GITHUB_ENV
  #         echo "SDL2_INCLUDE_PATH=$MSYS2_PATH/include/SDL2" >> $GITHUB_ENV
  #         echo "SDL2_LIB_PATH=$MSYS2_PATH/lib" >> $GITHUB_ENV

  #     - name: Build
  #       run: |
  #         cargo build --release

  #     - name: Run tests
  #       run: cargo test --release

  #     - name: Install SDL2.dll
  #       run: |
  #         cp SDL2.dll target/release

  # - name: Run the emulator
  #   run: |
  #     cd target/release
  #     # Replace 'your-rom.ch8' with the path to your Chip-8 ROM file.
  #     ./your-chip8-emulator.exe your-rom.ch8
